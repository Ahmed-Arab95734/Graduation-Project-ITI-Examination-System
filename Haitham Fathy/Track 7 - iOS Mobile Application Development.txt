-- Department: System Development, Track: iOS Mobile Application Development, Course: Swift Programming Fundamentals
INSERT INTO Question_Bank (Question_ID, Course_ID, Question_Type, Question_Description, Question_Model_Answer) VALUES (3000, 43, N'MCQ', N'Which keyword is used to declare a constant in Swift?', N'let'), (3001, 43, N'True/False', N'A `struct` in Swift can have inheritance.', N'False'), (3002, 43, N'MCQ', N'What is a variable that can hold a value or no value called?', N'Optional'), (3003, 43, N'MCQ', N'Which control flow statement is used for pattern matching?', N'switch'), (3004, 43, N'True/False', N'Swift is a statically typed language.', N'True'), (3005, 43, N'MCQ', N'What symbol is used to unwrap an optional if you are sure it contains a value?', N'!'), (3006, 43, N'MCQ', N'Which of these is a value type?', N'Struct'), (3007, 43, N'True/False', N'The `var` keyword is used for declaring mutable variables.', N'True'), (3008, 43, N'MCQ', N'What is the term for a function that is defined inside another function?', N'Nested Function'), (3009, 43, N'MCQ', N'A block of self-contained code that can be passed around is a...?', N'Closure'), (3010, 43, N'True/False', N'A class in Swift is a reference type.', N'True'), (3011, 43, N'MCQ', N'How do you safely unwrap an optional?', N'if let'), (3012, 43, N'True/False', N'Swift requires semicolons at the end of every statement.', N'False'), (3013, 43, N'MCQ', N'Which collection type stores an ordered list of items?', N'Array'), (3014, 43, N'MCQ', N'What provides default values for properties if an instance is deinitialized?', N'deinit');

-- Department: System Development, Track: iOS Mobile Application Development, Course: iOS Development with UIKit & SwiftUI
INSERT INTO Question_Bank (Question_ID, Course_ID, Question_Type, Question_Description, Question_Model_Answer) VALUES (3015, 44, N'MCQ', N'Which framework is Apple''s modern, declarative UI framework?', N'SwiftUI'), (3016, 44, N'True/False', N'UIKit uses a declarative syntax to build user interfaces.', N'False'), (3017, 44, N'MCQ', N'In UIKit, what is the fundamental building block for UI?', N'UIView'), (3018, 44, N'MCQ', N'In SwiftUI, what property wrapper is used to manage a view''s own state?', N'@State'), (3019, 44, N'True/False', N'A `UIViewController` manages a view hierarchy in UIKit.', N'True'), (3020, 44, N'MCQ', N'What is the main component of a SwiftUI view that describes its content?', N'The `body` property'), (3021, 44, N'MCQ', N'Which file in a UIKit project often handles app lifecycle events?', N'AppDelegate'), (3022, 44, N'True/False', N'SwiftUI views are structs.', N'True'), (3023, 44, N'MCQ', N'To create a vertical list of views in SwiftUI, you would use a...?', N'VStack'), (3024, 44, N'MCQ', N'What is the visual editor for UI in Xcode for UIKit called?', N'Interface Builder'), (3025, 44, N'True/False', N'In SwiftUI, UI updates automatically when state changes.', N'True'), (3026, 44, N'MCQ', N'What object in UIKit represents a single screen of content?', N'UIViewController'), (3027, 44, N'True/False', N'SwiftUI can be used in existing UIKit apps.', N'True'), (3028, 44, N'MCQ', N'Which property wrapper connects a SwiftUI view to an observable object?', N'@ObservedObject'), (3029, 44, N'MCQ', N'A `UILabel` is a component from which framework?', N'UIKit');

-- Department: System Development, Track: iOS Mobile Application Development, Course: Navigation & Layout
INSERT INTO Question_Bank (Question_ID, Course_ID, Question_Type, Question_Description, Question_Model_Answer) VALUES (3030, 45, N'MCQ', N'What system is used to define adaptive layouts in UIKit?', N'Auto Layout'), (3031, 45, N'True/False', N'In SwiftUI, `HStack` is used to arrange views vertically.', N'False'), (3032, 45, N'MCQ', N'A set of rules that governs the position and size of a view is a...?', N'Constraint'), (3033, 45, N'MCQ', N'Which UIKit container view controller manages a stack of other view controllers?', N'UINavigationController'), (3034, 45, N'True/False', N'A `UIStackView` automatically creates Auto Layout constraints for its arranged subviews.', N'True'), (3035, 45, N'MCQ', N'In SwiftUI, what view is used to create a tappable navigation link?', N'NavigationLink'), (3036, 45, N'MCQ', N'What UIKit component displays a row of buttons at the bottom of the screen for navigation?', N'UITabBarController'), (3037, 45, N'True/False', N'Intrinsic content size refers to a view''s natural, preferred size.', N'True'), (3038, 45, A'MCQ', N'In SwiftUI, what view is used to layer child views on top of each other?', N'ZStack'), (3039, 45, N'MCQ', N'A transition from one screen to another in UIKit is called a...?', N'Segue'), (3040, 45, N'True/False', N'You must always define both X and Y position constraints for a view.', N'True'), (3041, 45, N'MCQ', N'Which view in SwiftUI creates a scrollable container?', N'ScrollView'), (3042, 45, N'True/False', N'Constraints with a priority of 1000 are optional.', N'False'), (3043, 45, N'MCQ', N'Which SwiftUI view is used for presenting modal content?', N'Sheet'), (3044, 45, N'MCQ', N'What does "Safe Area" refer to?', N'The portion of a view that is unobscured by system elements');

-- Department: System Development, Track: iOS Mobile Application Development, Course: APIs & Core Data
INSERT INTO Question_Bank (Question_ID, Course_ID, Question_Type, Question_Description, Question_Model_Answer) VALUES (3045, 46, N'MCQ', N'Which Swift protocol is used for easy JSON parsing?', N'Codable'), (3046, 46, N'True/False', N'Core Data is a relational database.', N'False'), (3047, 46, N'MCQ', N'What is the primary class for making network requests in iOS?', N'URLSession'), (3048, 46, N'MCQ', N'In Core Data, what object represents a single record in the data store?', N'NSManagedObject'), (3049, 46, N'True/False', N'A REST API uses the HTTP protocol for communication.', N'True'), (3050, 46, N'MCQ', N'What is the Core Data stack encapsulated by in modern iOS?', N'NSPersistentContainer'), (3051, 46, N'MCQ', N'Which HTTP method is typically used to retrieve data from a server?', N'GET'), (3052, 46, N'True/False', N'The `JSONDecoder` is used to convert Swift objects into JSON data.', N'False'), (3053, 46, N'MCQ', N'A request to fetch data from Core Data is made using a...?', N'NSFetchRequest'), (3054, 46, N'MCQ', N'What is the purpose of Core Data''s visual data model editor?', N'To define entities and their attributes'), (3055, 46, N'True/False', N'All network requests should be made on the main UI thread.', N'False'), (3056, 46, N'MCQ', N'What does "CRUD" stand for in the context of data management?', N'Create, Read, Update, Delete'), (3057, 46, N'True/False', N'Core Data is a framework provided by Apple for data persistence.', N'True'), (3058, 46, N'MCQ', N'What object contains the response from a URLSession task?', N'URLResponse'), (3059, 46, N'MCQ', N'The schema of your Core Data model is defined by the...?', N'NSManagedObjectModel');

-- Department: System Development, Track: iOS Mobile Application Development, Course: iOS Design Patterns & Concurrency
INSERT INTO Question_Bank (Question_ID, Course_ID, Question_Type, Question_Description, Question_Model_Answer) VALUES (3060, 47, N'MCQ', N'Which design pattern is Apple''s traditional choice for iOS apps?', N'MVC'), (3061, 47, N'True/False', N'The Singleton pattern ensures that a class has only one instance.', N'True'), (3062, 47, N'MCQ', N'What design pattern uses a protocol to enable one object to communicate back to another?', N'Delegate'), (3063, 47, N'MCQ', N'What does GCD stand for?', N'Grand Central Dispatch'), (3064, 47, N'True/False', N'MVVM stands for Model-View-ViewModel.', N'True'), (3065, 47, N'MCQ', N'Which GCD queue should be used for all UI updates?', N'The main queue'), (3066, 47, N'MCQ', N'The modern way to handle concurrency in Swift is with...?', N'async/await'), (3067, 47, N'True/False', N'A race condition occurs when multiple threads access shared data simultaneously.', N'True'), (3068, 47, N'MCQ', N'In MVC, which component is responsible for the business logic?', N'Model'), (3069, 47, N'MCQ', N'What is a key benefit of the MVVM pattern?', N'Improved testability'), (3070, 47, N'True/False', N'A concurrent queue executes tasks one at a time in order.', N'False'), (3071, 47, N'MCQ', N'The `await` keyword can only be used inside a function marked with...?', N'async'), (3072, 47, N'True/False', N'The Observer pattern defines a one-to-many dependency between objects.', N'True'), (3073, 47, N'MCQ', N'Which design pattern provides a simplified interface to a complex subsystem?', N'Facade'), (3074, 47, N'MCQ', N'Which quality of service (QoS) class is for user-initiated tasks?', N'User-initiated');

-- Department: System Development, Track: iOS Mobile Application Development, Course: Testing & Publishing to App Store
INSERT INTO Question_Bank (Question_ID, Course_ID, Question_Type, Question_Description, Question_Model_Answer) VALUES (3075, 48, N'MCQ', N'What is Apple''s framework for writing unit and UI tests?', N'XCTest'), (3076, 48, N'True/False', N'Unit tests are used to check the functionality of the entire app from a user''s perspective.', N'False'), (3077, 48, N'MCQ', N'What is the platform for distributing beta versions of your app?', N'TestFlight'), (3078, 48, N'MCQ', N'What website is used to manage your app on the App Store?', N'App Store Connect'), (3079, 48, N'True/False', N'A Provisioning Profile links developers and devices to a development team.', N'True'), (3080, 48, N'MCQ', N'Testing individual functions or methods in isolation is called...?', N'Unit Testing'), (3081, 48, N'MCQ', N'What is required to sign and provision an app for release?', N'A Distribution Certificate'), (3082, 48, N'True/False', N'Anyone can download your app from TestFlight without an invitation.', N'False'), (3083, 48, N'MCQ', N'What does the `XCTAssert` function do?', N'Asserts that an expression is true'), (3084, 48, N'MCQ', N'The process of automating user interface interactions for testing is...?', N'UI Testing'), (3085, 48, N'True/False', N'The App Store review process is fully automated.', N'False'), (3086, 48, N'MCQ', N'What is the unique identifier for an app called?', N'Bundle ID'), (3087, 48, N'True/False', N'You must be a member of the Apple Developer Program to publish apps.', N'True'), (3088, 48, N'MCQ', N'What asset is crucial for your app''s branding on the App Store?', N'App Icon'), (3089, 48, N'MCQ', N'What is the main purpose of testing?', N'To find and fix bugs');

-- Department: System Development, Track: iOS Mobile Application Development, Course: Native iOS App Capstone
INSERT INTO Question_Bank (Question_ID, Course_ID, Question_Type, Question_Description, Question_Model_Answer) VALUES (3090, 49, N'MCQ', N'What is a primary goal of a capstone project?', N'To apply and integrate learned skills'), (3091, 49, N'True/False', N'Source control with Git is optional for a major development project.', N'False'), (3092, 49, N'MCQ', N'What is the practice of breaking down an app''s features into manageable tasks?', N'Project Planning'), (3093, 49, N'MCQ', N'A common way to manage third-party libraries in iOS is using...?', N'Swift Package Manager'), (3094, 49, N'True/False', N'Refactoring code is the process of adding new features.', N'False'), (3095, 49, N'MCQ', N'What is the term for finding and fixing bugs in your code?', N'Debugging'), (3096, 49, N'MCQ', N'Which of these is a key aspect of a good user experience?', N'Intuitive navigation'), (3097, 49, N'True/False', N'It is a good practice to handle potential errors gracefully in your app.', N'True'), (3098, 49, N'MCQ', N'Why is writing clean and readable code important?', N'It improves maintainability'), (3099, 49, N'MCQ', N'Which architectural pattern is often a good choice for a capstone project for testability?', N'MVVM'), (3100, 49, N'True/False', N'Performance optimization should only be considered after the app is finished.', N'False'), (3101, 49, N'MCQ', N'The process of ensuring an app is usable by people with disabilities is called...?', N'Accessibility'), (3102, 49, N'True/False', N'A good project includes documentation explaining its architecture and features.', N'True'), (3103, 49, N'MCQ', N'What does API stand for?', N'Application Programming Interface'), (3104, 49, N'MCQ', N'A successful project must meet the...?', N'Defined requirements');



-- Department: System Development, Track: iOS Mobile Application Development, Course: Swift Programming Fundamentals
INSERT INTO Question_Choice (Question_Choice_ID, Question_ID, Choice_Text) VALUES (3000, 3000, N'var'), (3001, 3000, N'let'), (3002, 3000, N'const'), (3003, 3000, N'static'), (3004, 3002, N'Variable'), (3005, 3002, N'Tuple'), (3006, 3002, N'Optional'), (3007, 3002, N'Enum'), (3008, 3003, N'for'), (3009, 3003, N'if'), (3010, 3003, N'while'), (3011, 3003, N'switch'), (3012, 3005, N'?'), (3013, 3005, N'*'), (3014, 3005, N'!'), (3015, 3005, N'&'), (3016, 3006, N'Class'), (3017, 3006, N'Protocol'), (3018, 3006, N'Struct'), (3019, 3006, N'Function'), (3020, 3008, N'Closure'), (3021, 3008, N'Nested Function'), (3022, 3008, N'Higher-Order Function'), (3023, 3008, N'Sub-function'), (3024, 3009, N'Struct'), (3025, 3009, N'Protocol'), (3026, 3009, N'Closure'), (3027, 3009, N'Class'), (3028, 3011, N'guard let'), (3029, 3011, N'if let'), (3030, 3011, N'try?'), (3031, 3011, N'force unwrap'), (3032, 3013, N'Dictionary'), (3033, 3013, N'Set'), (3034, 3013, N'Array'), (3035, 3013, N'Tuple'), (3036, 3014, N'init'), (3037, 3014, N'deinit'), (3038, 3014, N'destroy'), (3039, 3014, N'dealloc');

-- Department: System Development, Track: iOS Mobile Application Development, Course: iOS Development with UIKit & SwiftUI
INSERT INTO Question_Choice (Question_Choice_ID, Question_ID, Choice_Text) VALUES (3040, 3015, N'UIKit'), (3041, 3015, N'Core Data'), (3042, 3015, N'SwiftUI'), (3043, 3015, N'AppKit'), (3044, 3017, N'UIView'), (3045, 3017, N'CALayer'), (3046, 3017, N'UIWindow'), (3047, 3017, N'UIScreen'), (3048, 3018, N'@State'), (3049, 3018, N'@Binding'), (3050, 3018, N'@EnvironmentObject'), (3051, 3018, N'@ObservedObject'), (3052, 3020, N'The `view` property'), (3053, 3020, N'The `content` property'), (3054, 3020, N'The `body` property'), (3055, 3020, N'The `init` method'), (3056, 3021, N'ViewController'), (3057, 3021, N'SceneDelegate'), (3058, 3021, N'AppDelegate'), (3059, 3021, N'Info.plist'), (3060, 3023, N'HStack'), (3061, 3023, N'ZStack'), (3062, 3023, N'VStack'), (3063, 3023, N'List'), (3064, 3024, N'Interface Builder'), (3065, 3024, N'SwiftUI Preview'), (3066, 3024, N'Asset Catalog'), (3067, 3024, N'Storyboard'), (3068, 3026, N'UIView'), (3069, 3026, N'UIViewController'), (3070, 3026, N'UINavigationController'), (3071, 3026, N'UIWindow'), (3072, 3028, N'@State'), (3073, 3028, N'@Binding'), (3074, 3028, N'@Published'), (3075, 3028, N'@ObservedObject'), (3076, 3029, N'SwiftUI'), (3077, 3029, N'Core Graphics'), (3078, 3029, N'Foundation'), (3079, 3029, N'UIKit');

-- Department: System Development, Track: iOS Mobile Application Development, Course: Navigation & Layout
INSERT INTO Question_Choice (Question_Choice_ID, Question_ID, Choice_Text) VALUES (3080, 3030, N'Auto Layout'), (3081, 3030, N'Stack Views'), (3082, 3030, N'Frame-based layout'), (3083, 3030, N'SwiftUI'), (3084, 3032, N'Frame'), (3085, 3032, N'Constraint'), (3086, 3032, N'Bound'), (3087, 3032, N'Anchor'), (3088, 3033, N'UIViewController'), (3089, 3033, N'UITabBarController'), (3090, 3033, N'UINavigationController'), (3091, 3033, N'UISplitViewController'), (3092, 3035, N'NavigationLink'), (3093, 3035, N'Button'), (3094, 3035, N'Sheet'), (3095, 3035, N'NavLink'), (3096, 3036, N'UINavigationController'), (3097, 3036, N'UISplitViewController'), (3098, 3036, N'UITabBarController'), (3099, 3036, N'UIPageViewController'), (3100, 3038, N'HStack'), (3101, 3038, N'VStack'), (3102, 3038, N'ZStack'), (3103, 3038, N'Group'), (3104, 3039, N'Transition'), (3105, 3039, N'Segue'), (3106, 3039, N'Push'), (3107, 3039, N'Modal'), (3108, 3041, N'List'), (3109, 3041, N'StackView'), (3110, 3041, N'Form'), (3111, 3041, N'ScrollView'), (3112, 3043, N'Alert'), (3113, 3043, N'Popover'), (3114, 3043, N'Sheet'), (3115, 3043, N'NavigationLink'), (3116, 3044, N'The entire screen area'), (3117, 3044, N'The area outside the bezels'), (3118, 3044, N'The portion of a view that is unobscured by system elements'), (3119, 3044, N'The main content area you define');

-- Department: System Development, Track: iOS Mobile Application Development, Course: APIs & Core Data
INSERT INTO Question_Choice (Question_Choice_ID, Question_ID, Choice_Text) VALUES (3120, 3045, N'Serializable'), (3121, 3045, N'Decodable'), (3122, 3045, N'Codable'), (3123, 3045, N'Parsable'), (3124, 3047, N'URLRequest'), (3125, 3047, N'URLSession'), (3126, 3047, N'HTTPClient'), (3127, 3047, N'NetworkManager'), (3128, 3048, N'NSEntityDescription'), (3129, 3048, N'NSManagedObject'), (3130, 3048, N'NSManagedObjectContext'), (3131, 3048, N'NSPersistentStore'), (3132, 3050, N'NSManagedObjectContext'), (3133, 3050, N'NSPersistentStoreCoordinator'), (3134, 3050, N'NSPersistentContainer'), (3135, 3050, N'NSManagedObjectModel'), (3136, 3051, N'GET'), (3137, 3051, N'POST'), (3138, 3051, N'PUT'), (3139, 3051, N'DELETE'), (3140, 3053, N'NSQuery'), (3141, 3053, N'NSFetchRequest'), (3142, 3053, N'NSDataRequest'), (3143, 3053, N'NSPredicate'), (3144, 3054, N'To write fetch requests'), (3145, 3054, N'To define entities and their attributes'), (3146, 3054, N'To manage the persistent store'), (3147, 3054, N'To create managed object contexts'), (3148, 3056, N'Create, Review, Update, Destroy'), (3149, 3056, N'Copy, Read, Undo, Delete'), (3150, 3056, N'Create, Read, Update, Delete'), (3151, 3056, N'Connect, Receive, Utilize, Disconnect'), (3152, 3058, N'URLRequest'), (3153, 3058, N'URLResponse'), (3154, 3058, N'HTTPURLResponse'), (3155, 3058, N'Data'), (3156, 3059, N'NSPersistentStoreCoordinator'), (3157, 3059, N'NSManagedObjectModel'), (3158, 3059, N'NSManagedObjectContext'), (3159, 3059, N'NSEntityDescription');

-- Department: System Development, Track: iOS Mobile Application Development, Course: iOS Design Patterns & Concurrency
INSERT INTO Question_Choice (Question_Choice_ID, Question_ID, Choice_Text) VALUES (3160, 3060, N'MVVM'), (3161, 3060, N'MVC'), (3162, 3060, N'VIPER'), (3163, 3060, N'Singleton'), (3164, 3062, N'Singleton'), (3165, 3062, N'Observer'), (3166, 3062, N'Delegate'), (3167, 3062, N'Facade'), (3168, 3063, N'Grand Central Dispatch'), (3169, 3063, N'Graphic Computation Driver'), (3170, 3063, N'General Concurrency Driver'), (3171, 3063, N'Grouped Central Dispatch'), (3172, 3065, N'A background queue'), (3173, 3065, N'Any serial queue'), (3174, 3065, N'The main queue'), (3175, 3065, N'A concurrent queue'), (3176, 3066, N'Callbacks'), (3177, 3066, N'Delegates'), (3178, 3066, N'GCD'), (3179, 3066, N'async/await'), (3180, 3068, N'View'), (3181, 3068, N'Controller'), (3182, 3068, N'Model'), (3183, 3068, N'ViewModel'), (3184, 3069, N'Simplicity'), (3185, 3069, N'Less code'), (3186, 3069, N'Improved testability'), (3187, 3069, N'Faster performance'), (3188, 3071, N'await'), (3189, 3071, N'sync'), (3190, 3071, N'throws'), (3191, 3071, N'async'), (3192, 3073, N'Adapter'), (3193, 3073, N'Facade'), (3194, 3073, N'Decorator'), (3195, 3073, N'Factory'), (3196, 3074, N'Background'), (3197, 3074, N'User-initiated'), (3198, 3074, N'Utility'), (3199, 3074, N'Default');

-- Department: System Development, Track: iOS Mobile Application Development, Course: Testing & Publishing to App Store
INSERT INTO Question_Choice (Question_Choice_ID, Question_ID, Choice_Text) VALUES (3200, 3075, N'OCUnit'), (3201, 3075, N'Quick/Nimble'), (3202, 3075, N'XCTest'), (3203, 3075, N'SwiftCheck'), (3204, 3077, N'App Store'), (3205, 3077, N'TestFlight'), (3206, 3077, N'Xcode Cloud'), (3207, 3077, N'iTunes Connect'), (3208, 3078, N'developer.apple.com'), (3209, 3078, N'App Store Connect'), (3210, 3078, N'iCloud'), (3211, 3078, N'Xcode'), (3212, 3080, N'UI Testing'), (3213, 3080, N'Integration Testing'), (3214, 3080, N'Unit Testing'), (3215, 3080, N'Beta Testing'), (3216, 3081, N'A Development Certificate'), (3217, 3081, N'A Distribution Certificate'), (3218, 3081, N'An Ad Hoc Certificate'), (3219, 3081, N'A Developer ID Certificate'), (3220, 3083, N'Asserts that an expression is false'), (3221, 3083, N'Asserts that two values are equal'), (3222, 3083, N'Asserts that an object is nil'), (3223, 3083, N'Asserts that an expression is true'), (3224, 3084, N'Unit Testing'), (3225, 3084, N'UI Testing'), (3226, 3084, N'Manual Testing'), (3227, 3084, N'Snapshot Testing'), (3228, 3086, N'App ID'), (3229, 3086, N'Bundle ID'), (3230, 3086, N'Team ID'), (3231, 3086, N'Product ID'), (3232, 3088, N'Screenshots'), (3233, 3088, N'App Icon'), (3234, 3088, N'App Preview Video'), (3235, 3088, N'Description'), (3236, 3089, N'To write more code'), (3237, 3089, N'To prove the code works'), (3238, 3089, N'To find and fix bugs'), (3239, 3089, N'To satisfy management');

-- Department: System Development, Track: iOS Mobile Application Development, Course: Native iOS App Capstone
INSERT INTO Question_Choice (Question_Choice_ID, Question_ID, Choice_Text) VALUES (3240, 3090, N'To focus on one specific skill'), (3241, 3090, N'To build a simple, single-screen app'), (3242, 3090, N'To apply and integrate learned skills'), (3243, 3090, N'To learn a new programming language'), (3244, 3092, N'Debugging'), (3245, 3092, N'Refactoring'), (3246, 3092, N'Project Planning'), (3247, 3092, N'Deployment'), (3248, 3093, N'CocoaPods'), (3249, 3093, N'Carthage'), (3250, 3093, N'Swift Package Manager'), (3251, 3093, N'All of the above'), (3252, 3095, N'Programming'), (3253, 3095, N'Debugging'), (3254, 3095, N'Compiling'), (3255, 3095, N'Designing'), (3256, 3096, N'Complex animations'), (3257, 3096, N'Use of many colors'), (3258, 3096, N'Intuitive navigation'), (3259, 3096, N'Lots of features'), (3260, 3098, N'It runs faster'), (3261, 3098, N'It uses less memory'), (3262, 3098, N'It improves maintainability'), (3263, 3098, N'It impresses other developers'), (3264, 3099, N'MVC'), (3265, 3099, N'Singleton'), (3266, 3099, N'MVVM'), (3267, 3099, N'VIPER'), (3268, 3101, N'Internationalization'), (3269, 3101, N'Accessibility'), (3270, 3101, N'Localization'), (3271, 3101, N'Optimization'), (3272, 3103, N'Application Programming Interface'), (3273, 3103, N'Apple Programming Interface'), (3274, 3103, N'Application Protocol Interaction'), (3275, 3103, N'Applied Programming Instruction'), (3276, 3104, N'Defined requirements'), (3277, 3104, N'Budget'), (3278, 3104, N'Timeline'), (3279, 3104, N'Latest iOS version');